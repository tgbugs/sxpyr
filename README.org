#+title: sxpyr: a flexible Lisp reader for Python

Parse s-expressions, edn, and a variety of lisp dialects.

* Introduction
Currently supports something approximating the union of Common Lisp,
Scheme, Racket, Clojure, Hy, Fennel, and Emacs Lisp.

This library is designed to be vendored for projects that want to
avoid dependencies. It bears an MIT license and sxpyr.py can be
copied directly into other projects so that they can parse a wide
variety of formats, including Clojure's EDN.

Since sxpyr is designed to support a variety of different dialects, a
second pass is almost always needed in order to match the output of
native readers. This second pass is a good place to raise additional
syntax errors for the dialect you are working with. Some dialects have
already been implemented.

Due to deeper differences between dialects, in some cases it is
necessary to configure the reader in advance. This happens in cases
where a particular form is valid in two different dialects and one
or both parses are sufficiently divergent that it is not possible
to recover the correct parse for the other dialect.

At the moment the reader cannot be modified at runtime. This means
that it cannot be used to parse named readtables or things like
Racket's ~#lang at-exp~. In the future it might be possible to pass
the generator through to the functions that handle dispatch macros and
make it possible to register new reader macros, but that is well out
of scope at the moment.
* Testing
In order to run the tests you will need the following repos.
- sbcl
- ccl
- emacs
- org-mode
- clojure
- spec.alpha
- code.specs.alpha
- tawny-owl
- hy
- Fennel

For now you will also need the following installed on your system.
- xemacs
- app-xemacs/xemacs-packages-all
- guile
- gambit
